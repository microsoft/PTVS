parameters:
- name: ptvsPackageVersion
  type: string
  default: $(Build.BuildNumber)
- name: nuspecPath
  type: string
  default: $(Build.SourcesDirectory)\pkg\Microsoft.Internal.PythonTools.Profiling.nuspec

steps:

  # do some string replaces in the nuspec
  - powershell: |
      $content = Get-Content ${{ parameters.nuspecPath }}
      $content = $content.Replace('$version$', '${{ parameters.ptvsPackageVersion }}')
      $content = $content.Replace('Build.SourcesDirectory', '$(Build.SourcesDirectory)')
      $content = $content.Replace('Build.BinariesDirectory', '$(Build.BinariesDirectory)')
      $content | Set-Content ${{ parameters.nuspecPath }}
    displayName: 'Update nuspec'
   
  # Copy LICENCE to LICENSE.txt because nuget doesn't like files without extensions
  - powershell: |
      Copy-Item $(Build.SourcesDirectory)/LICENSE $(Build.SourcesDirectory)/LICENSE.txt
    displayName: 'Copy LICENSE to LICENSE.txt'

  # Pack the nuget package  
  - task: NuGetCommand@2
    displayName: Build NuGet Package
    inputs:
      command: pack
      packagesToPack: ${{ parameters.nuspecPath }}
      packDestination: $(Build.ArtifactStagingDirectory)\pkg
  
  # Sign the nuget package
  - task: MSBuild@1
    displayName: Sign NuGet Package
    inputs:
      solution: $(Build.SourcesDirectory)\pkg\sign_nuget_package.proj

  # The 1ES pipeline template will publish the package as a pipeline artifact using the templateContext
