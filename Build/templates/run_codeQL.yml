steps:

# See https://eng.ms/docs/security-compliance-identity-and-management-scim/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/sdl-azdo-extension/codeql-build-task
- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for Python'
  inputs:
    language: python
    sourceCodeDirectory: $(Build.SourcesDirectory)\Python\Product
  condition: succeededOrFailed()
  continueOnError: True

- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for C#'
  inputs:
    language: csharp
    # The build command is constructed by examining build.yml. Force a clean build since we don't want incremental.
    # This file is guaranteed to exist because of the VisualStudio_17.0 demand on the job pool
    buildCommandsString: '"%ProgramFiles%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsMSBuildCmd.bat" && msbuild $(Build.SourcesDirectory)/Python/Product/dirs.proj /p:VSTarget=$(VSTarget) /t:Clean,Build'
  condition: succeededOrFailed()
  continueOnError: True

- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for C++'
  inputs:
    language: cpp
    # Same build command as above, since this produces both managed AND native binaries
    buildCommandsString: '"%ProgramFiles%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsMSBuildCmd.bat" && msbuild $(Build.SourcesDirectory)/Python/Product/dirs.proj /p:VSTarget=$(VSTarget) /t:Clean,Build'
  condition: succeededOrFailed()
  continueOnError: True
