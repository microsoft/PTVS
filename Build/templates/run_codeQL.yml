steps:

- task: UsePythonVersion@0
  displayName: 'Use Python 3.x'

- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for Python'
  inputs:
    language: python
    sourceCodeDirectory: $(Build.SourcesDirectory)\Python\Product
    condition: false  # TODO: This is temporarily disabled to save build time. Re-enable when done adding other tasks.
    #condition: succeededOrFailed()
  continueOnError: true

- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for C#'
  inputs:
    language: csharp
    # The build command is constructed by examining build.yml. Force a clean build since we don't want incremental.
    buildCommandsString: >
      '"%ProgramFiles(x86)%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsMSBuildCmd.bat" &&
      msbuild $(Build.SourcesDirectory)/Python/Product/dirs.proj /p:VSTarget=$(VSTarget) /t:Clean,Build'
  condition: succeededOrFailed()
  continueOnError: true

- task: Semmle@1
  displayName: 'Run CodeQL (Semmle) for C++'
  inputs:
    language: cpp
    # Same build command as above, since this produces both managed AND native binaries
    buildCommandsString: >
      '"%ProgramFiles(x86)%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsMSBuildCmd.bat" &&
      msbuild $(Build.SourcesDirectory)/Python/Product/dirs.proj /p:VSTarget=$(VSTarget) /t:Clean,Build'
  condition: succeededOrFailed()
  continueOnError: true
