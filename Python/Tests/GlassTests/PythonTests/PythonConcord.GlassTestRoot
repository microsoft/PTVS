<?xml version="1.0" encoding="utf-8"?>
<GlassTestRoot xmlns="http://schemas.microsoft.com/vstudio/diagnostics/glasstestmanagement/2014"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/vstudio/diagnostics/glasstestmanagement/2014 ../GlassTestManagement.xsd">
  <!--This file defines the rules for running glass tests. Add this file to any solution and install 
  the GlassTestAdapter to get test integration-->
  
  <!--Special setup items for running glass tests from a debugger enlistment-->
  <Setup>
    <ImportPropertyGroup>..\tools\RunSettings.GlassTestProps</ImportPropertyGroup>
    <RunScript Condition="Exists('..\tools\internal\PrepGlass.cmd')" RunAs="VSUser">..\tools\internal\PrepGlass.cmd &quot;$(GlassDir)&quot;</RunScript>
    <!-- Process the regdef file to create the .reg file for Glass registration. -->
    <RunScript RunAs="VSUser">"$(GlassDir)GlassRegGen.exe" "$(GlassDir)\" -r "$(GlassDir)glass2.exe.regroot" "$(GlassDir)ConGlass.reg"</RunScript>
    <RunScript RunAs="VSUser">"$(GlassDir)GlassRegGen.exe" "PythonEngine.regdef" "$(GlassDir)glass2.exe.regroot" "$(GlassDir)PythonConGlass.reg"</RunScript>
  </Setup>
  <TestSetup>
    <RunScript RunAs="Admin">..\tools\RegImport.cmd "$(GlassDir)ConGlass.reg" $(RunAs64)</RunScript>
    <RunScript RunAs="Admin">..\tools\RegImport.cmd "$(GlassDir)PythonConGlass.reg" $(RunAs64)</RunScript>
  </TestSetup>
  <TestCleanup>
    <RunScript RunAs="Admin">..\tools\RegDelete.cmd "$(GlassDir)glass2.exe.regroot" $(RunAs64)</RunScript>
  </TestCleanup>
  
  <PropertyGroup>
    <!--NOTE: GlassDir has a trailing slash-->
    <PythonTestRootDir Condition="'?(PythonTestRootDir)'==''">$(GetFullPath('.\Python\'))</PythonTestRootDir>
    <GlassPath Condition="'?(GlassPath)'==''">$(GlassDir)glass2.exe</GlassPath>
  <!-- Uncomment the following to force glass to show a message box on startup in order to attach a debugger -->
  <!--<GLASS_DEBUG CopyToEnvironment="true">startup</GLASS_DEBUG>-->

  <!-- Uncomment the following line to save dumps of the debuggee, when glass2 or msvsmon crashes, and multiple tests are run (no assert mode). -->
  <!--
  <VSASSERT_SAVE_CHILD_DEBUGGED_PROCESSES_DUMPS CopyToEnvironment="true">true</VSASSERT_SAVE_CHILD_DEBUGGED_PROCESSES_DUMPS>
  -->
  </PropertyGroup>

  <!-- The source files in a directory will be compiled in the order of the compilation rule definition. -->
  <DebuggeeCompileRules>

    <!-- Glass Test Extensions -->
    <Rule Extension=".GlassExtension.cs" Output="$(GlassDir)\temp\$(SourceFileName).dll" Command="tools\CompileGlassTestExtension.cmd &quot;$(SourceFilePath)&quot; &quot;$(GlassDir)&quot;"/>  

    <!-- Python debuggees -->
    <Rule Extension=".cpp" Output="$(OutDir)\$(SourceFileName).cpp" Command="tools\CopyPythonDebuggee.cmd $(TargetArchitecture) &quot;$(SourceFilePath)&quot; &quot;$(OutDir)&quot; &quot;$(GlassDir)&quot; &quot;$(PythonTestRootDir)&quot;"/>
    <Rule Extension=".py" Output="$(OutDir)\$(SourceFileName).py" Command="tools\CopyPythonDebuggee.cmd $(TargetArchitecture) &quot;$(SourceFilePath)&quot; &quot;$(OutDir)&quot; &quot;$(GlassDir)&quot; &quot;$(PythonTestRootDir)&quot;"/>
  </DebuggeeCompileRules>

  <TestGroups>
    <TestGroup Include="Python\Python.GlassTestGroup"/>
    <TestGroup Include="Python3x\Python3x.GlassTestGroup"/>
  </TestGroups>
</GlassTestRoot>