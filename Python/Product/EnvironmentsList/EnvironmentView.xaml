<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:Microsoft.PythonTools.EnvironmentsList"
                    xmlns:wpf="clr-namespace:Microsoft.VisualStudioTools.Wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.PythonTools.EnvironmentsList;component/Wpf/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Microsoft.PythonTools.EnvironmentsList;component/images/images.xaml" />
        <ResourceDictionary>
            <!-- ***********************************************************
                 EnvironmentListItem is used to show environments in a listbox.
                 It shows the description, a button to open the interactive
                 window, and an indication of the DB state.
                 *********************************************************** -->
            <DataTemplate DataType="{x:Type l:EnvironmentView}" x:Key="EnvironmentListItem">
                <Grid Margin="6 3 3 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Stretch"
                          Margin="3 3 3 0"
                          DataContext="{Binding Description,Mode=OneWay}">
                        <TextBlock x:Name="Name_IsDefault"
                                   Text="{Binding}"
                                   TextTrimming="CharacterEllipsis"
                                   FontWeight="Bold"
                                   Margin="0"
                                   Visibility="Hidden" />
                        <TextBlock x:Name="Name_IsNotDefault"
                                   Text="{Binding}"
                                   TextTrimming="CharacterEllipsis"
                                   Margin="0"
                                   Visibility="Visible" />
                    </Grid>

                    <Grid x:Name="Company"
                          Grid.Row="1" Grid.Column="0"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Stretch"
                          Margin="5 0 3 3"
                          DataContext="{Binding Company,Mode=OneWay}">
                        <TextBlock Text="{Binding}"
                                   TextTrimming="CharacterEllipsis"
                                   Margin="0"
                                   FontSize="10"
                                   Opacity="0.9" />
                    </Grid>

                    <Button x:Name="InteractiveWindowButton"
                            Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                            Style="{StaticResource {x:Type Button}}"
                            Cursor="Hand"
                            Margin="1"
                            Command="{x:Static l:EnvironmentView.OpenInteractiveWindow}"
                            CommandParameter="{Binding}"
                            ToolTip="{x:Static l:Resources.EnvironmentViewInteractiveWindowTooltip}"
                            AutomationProperties.Name="{Binding LocalizedDisplayName,Mode=OneWay}"
                            AutomationProperties.HelpText="{x:Static l:Resources.EnvironmentViewInteractiveWindowAutomationName}">
                        <Control Style="{StaticResource InteractiveWindowImage}" IsTabStop="False" />
                    </Button>
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsBroken}" Value="True">
                        <Setter TargetName="Name_IsDefault" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                        <Setter TargetName="Name_IsNotDefault" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                        <Setter TargetName="Name_IsDefault" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Name_IsNotDefault" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Company,Mode=OneWay}" Value="">
                        <Setter TargetName="Company" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!-- ***********************************************************
                 EnvironmentHeader is used for the top of the detailed
                 display.
                 *********************************************************** -->
            <DataTemplate DataType="{x:Type l:EnvironmentView}" x:Key="EnvironmentHeader">
                <TextBlock x:Name="_Description"
                           Margin="3 0"
                           Padding="0 3"
                           Text="{Binding Description,Mode=OneWay}"
                           FontSize="20" />
            </DataTemplate>

            <Style x:Key="HelpCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type Control}}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource EllipseFocusVisualStyle}" />
                <Setter Property="Margin" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Width="{Binding ActualHeight,RelativeSource={RelativeSource Self}}">
                                <Ellipse StrokeThickness="1"
                                         Margin="1"
                                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Fill="{TemplateBinding Background}"/>
                                <TextBlock Text="?"
                                           Foreground="{TemplateBinding Foreground}"
                                           HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                           TextAlignment="Center"
                                           Margin="3 3 4 3"
                                           FontWeight="Bold"
                                           FontSize="14" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Controls.ControlBorderSelectedKey}}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Controls.ControlBackgroundHoverKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Controls.ControlBorderHoverKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Controls.ControlForegroundHoverKey}}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Controls.HighlightKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Controls.HighlightTextKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Controls.ControlBackgroundDisabledKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static wpf:Controls.ControlForegroundDisabledKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Controls.ControlBorderDisabledKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    
</ResourceDictionary>