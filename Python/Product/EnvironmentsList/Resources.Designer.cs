//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.PythonTools.EnvironmentsList {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.PythonTools.EnvironmentsList.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} - broken.
        /// </summary>
        public static string BrokenEnvironmentAutomationNameFormat {
            get {
                return ResourceManager.GetString("BrokenEnvironmentAutomationNameFormat", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to _Apply.
        /// </summary>
        public static string ConfigurationExtensionApplyLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionApplyLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Saves the changes that have been made..
        /// </summary>
        public static string ConfigurationExtensionApplyTooltip {
            get {
                return ResourceManager.GetString("ConfigurationExtensionApplyTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The architecture helps distinguish similar interpreters. This should be set to match the target architecture of the interpreter, rather than the architecture of your operating system..
        /// </summary>
        public static string ConfigurationExtensionArchitectureHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionArchitectureHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string ConfigurationExtensionArchitectureLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionArchitectureLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string ConfigurationExtensionArchitectureWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionArchitectureWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to A_uto Detect.
        /// </summary>
        public static string ConfigurationExtensionAutoDetectLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionAutoDetectLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Attempts to fill in blank settings based on those that are already filled in..
        /// </summary>
        public static string ConfigurationExtensionAutoDetectTooltip {
            get {
                return ResourceManager.GetString("ConfigurationExtensionAutoDetectTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The description is displayed throughout Visual Studio to help you identify the environment..
        /// </summary>
        public static string ConfigurationExtensionDescriptionHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionDescriptionHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string ConfigurationExtensionDescriptionLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionDescriptionLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to e.g. My Custom Environment.
        /// </summary>
        public static string ConfigurationExtensionDescriptionWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionDescriptionWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Configure.
        /// </summary>
        public static string ConfigurationExtensionDisplayName {
            get {
                return ResourceManager.GetString("ConfigurationExtensionDisplayName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to These environment settings may be configured. The tooltips on each field include more information and examples..
        /// </summary>
        public static string ConfigurationExtensionHelpContent {
            get {
                return ResourceManager.GetString("ConfigurationExtensionHelpContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Browse for interpreter path.
        /// </summary>
        public static string ConfigurationExtensionInterpreterPathBrowseButton {
            get {
                return ResourceManager.GetString("ConfigurationExtensionInterpreterPathBrowseButton", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Executable Files (*.exe)|*.exe|All Files (*.*)|*.*.
        /// </summary>
        public static string ConfigurationExtensionInterpreterPathBrowseFilter {
            get {
                return ResourceManager.GetString("ConfigurationExtensionInterpreterPathBrowseFilter", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The interpreter path is the executable file used to run Python. Normally this is called &quot;python.exe&quot;, but it may be different for some interpreters..
        /// </summary>
        public static string ConfigurationExtensionInterpreterPathHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionInterpreterPathHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Interpreter path.
        /// </summary>
        public static string ConfigurationExtensionInterpreterPathLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionInterpreterPathLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to e.g. C:\PythonXY\python.exe.
        /// </summary>
        public static string ConfigurationExtensionInterpreterPathWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionInterpreterPathWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The language version determines whether certain syntax features are allowed or reported as errors. This should be set to match the interpreter version..
        /// </summary>
        public static string ConfigurationExtensionLanguageVersionHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionLanguageVersionHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Language version.
        /// </summary>
        public static string ConfigurationExtensionLanguageVersionLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionLanguageVersionLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Language version.
        /// </summary>
        public static string ConfigurationExtensionLanguageVersionWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionLanguageVersionWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This environment variable is set to specify search paths that should be added to sys.path. Normally this should be set to &quot;PYTHONPATH&quot;, but it may be different for some interpreters..
        /// </summary>
        public static string ConfigurationExtensionPathEnvVarHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPathEnvVarHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Path environment variable.
        /// </summary>
        public static string ConfigurationExtensionPathEnvVarLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPathEnvVarLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to e.g. PYTHONPATH.
        /// </summary>
        public static string ConfigurationExtensionPathEnvVarWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPathEnvVarWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Browse for prefix path.
        /// </summary>
        public static string ConfigurationExtensionPrefixPathBrowseButton {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPrefixPathBrowseButton", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The prefix path specifies the directory containing all files needed for this environment. It may be used for searching installed libraries or deploying an environment to another machine..
        /// </summary>
        public static string ConfigurationExtensionPrefixPathHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPrefixPathHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Prefix path.
        /// </summary>
        public static string ConfigurationExtensionPrefixPathLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPrefixPathLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to e.g. C:\PythonXY.
        /// </summary>
        public static string ConfigurationExtensionPrefixPathWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionPrefixPathWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Re_move.
        /// </summary>
        public static string ConfigurationExtensionRemoveLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionRemoveLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Removes the environment. This operation cannot be undone..
        /// </summary>
        public static string ConfigurationExtensionRemoveTooltip {
            get {
                return ResourceManager.GetString("ConfigurationExtensionRemoveTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to _Reset.
        /// </summary>
        public static string ConfigurationExtensionResetLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionResetLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Clears any changes that have been made..
        /// </summary>
        public static string ConfigurationExtensionResetTooltip {
            get {
                return ResourceManager.GetString("ConfigurationExtensionResetTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Browse for windowed interpreter path.
        /// </summary>
        public static string ConfigurationExtensionWindowedInterpreterPathBrowseButton {
            get {
                return ResourceManager.GetString("ConfigurationExtensionWindowedInterpreterPathBrowseButton", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Executable Files (*.exe)|*.exe|All Files (*.*)|*.*.
        /// </summary>
        public static string ConfigurationExtensionWindowedInterpreterPathBrowseFilter {
            get {
                return ResourceManager.GetString("ConfigurationExtensionWindowedInterpreterPathBrowseFilter", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The windowed interpreter path is the executable file used to start Python without displaying a console window. Normally this is called &quot;pythonw.exe&quot;, but it may be different for some interpreters..
        /// </summary>
        public static string ConfigurationExtensionWindowedInterpreterPathHelp {
            get {
                return ResourceManager.GetString("ConfigurationExtensionWindowedInterpreterPathHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Windowed interpreter.
        /// </summary>
        public static string ConfigurationExtensionWindowedInterpreterPathLabel {
            get {
                return ResourceManager.GetString("ConfigurationExtensionWindowedInterpreterPathLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to e.g. C:\PythonXY\pythonw.exe.
        /// </summary>
        public static string ConfigurationExtensionWindowedInterpreterPathWatermark {
            get {
                return ResourceManager.GetString("ConfigurationExtensionWindowedInterpreterPathWatermark", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to IntelliSense.
        /// </summary>
        public static string DBExtensionDisplayName {
            get {
                return ResourceManager.GetString("DBExtensionDisplayName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This list shows the modules as detected by IntelliSense. If you do not see your library here, it may not be installed correctly..
        /// </summary>
        public static string DBExtensionHelpContent {
            get {
                return ResourceManager.GetString("DBExtensionHelpContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The completion DB does not have analysis results for all modules in this package..
        /// </summary>
        public static string DBExtensionIsNotUpToDateToolTip {
            get {
                return ResourceManager.GetString("DBExtensionIsNotUpToDateToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This package is up to date in the completion DB..
        /// </summary>
        public static string DBExtensionIsUpToDateToolTip {
            get {
                return ResourceManager.GetString("DBExtensionIsUpToDateToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to {0} ({1} modules).
        /// </summary>
        public static string DBExtensionModuleAutomationName {
            get {
                return ResourceManager.GetString("DBExtensionModuleAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ({0} modules).
        /// </summary>
        public static string DBExtensionModuleCountLabel {
            get {
                return ResourceManager.GetString("DBExtensionModuleCountLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Refresh completion DB.
        /// </summary>
        public static string DBExtensionRefreshDBAutomationName {
            get {
                return ResourceManager.GetString("DBExtensionRefreshDBAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to _Refresh DB.
        /// </summary>
        public static string DBExtensionRefreshDBLabel {
            get {
                return ResourceManager.GetString("DBExtensionRefreshDBLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Help me fix this broken environment.
        /// </summary>
        public static string EnvironmentPathsExtensionBrokenEnvironmentLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionBrokenEnvironmentLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This environment cannot be made the default..
        /// </summary>
        public static string EnvironmentPathsExtensionCannotBeDefaultLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionCannotBeDefaultLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Configure or remove environment.
        /// </summary>
        public static string EnvironmentPathsExtensionConfigureEnvironmentLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionConfigureEnvironmentLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete &apos;{0}&apos;?
        ///
        ///The folder will be deleted from disk. This operation cannot be undone..
        /// </summary>
        public static string EnvironmentPathsExtensionDeleteConfirmation {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionDeleteConfirmation", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Delete this environment from disk.
        /// </summary>
        public static string EnvironmentPathsExtensionDeleteEnvironment {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionDeleteEnvironment", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        public static string EnvironmentPathsExtensionDisplayName {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionDisplayName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Use IPython interactive mode.
        /// </summary>
        public static string EnvironmentPathsExtensionEnableIPythonAutomationName {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionEnableIPythonAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Use IPython interactive mode.
        /// </summary>
        public static string EnvironmentPathsExtensionEnableIPythonLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionEnableIPythonLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This is a quick overview of the environment. Use the links to open the paths, or right-click to copy them to the clipboard..
        /// </summary>
        public static string EnvironmentPathsExtensionHelpContent {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionHelpContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to This is the default environment for new projects.
        /// </summary>
        public static string EnvironmentPathsExtensionIsDefaultLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionIsDefaultLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Make this the default environment for new projects.
        /// </summary>
        public static string EnvironmentPathsExtensionMakeDefaultLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionMakeDefaultLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open in _Command Prompt.
        /// </summary>
        public static string EnvironmentPathsExtensionOpenInCommandPromptMenuItem {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionOpenInCommandPromptMenuItem", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open in PowerShell.
        /// </summary>
        public static string EnvironmentPathsExtensionOpenInPowerShell {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionOpenInPowerShell", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Explore interactive scripts.
        /// </summary>
        public static string EnvironmentPathsExtensionOpenInteractiveScriptsLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionOpenInteractiveScriptsLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open interactive window.
        /// </summary>
        public static string EnvironmentPathsExtensionOpenInteractiveWindowLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionOpenInteractiveWindowLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Visit the distributor&apos;s website.
        /// </summary>
        public static string EnvironmentPathsExtensionSupportInformationLabel {
            get {
                return ResourceManager.GetString("EnvironmentPathsExtensionSupportInformationLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Interpreter path.
        /// </summary>
        public static string EnvironmentPathsInterpreterPath {
            get {
                return ResourceManager.GetString("EnvironmentPathsInterpreterPath", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Interpreter directory.
        /// </summary>
        public static string EnvironmentPathsPrefixPath {
            get {
                return ResourceManager.GetString("EnvironmentPathsPrefixPath", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Windows interpreter path.
        /// </summary>
        public static string EnvironmentPathsWindowsInterpreterPath {
            get {
                return ResourceManager.GetString("EnvironmentPathsWindowsInterpreterPath", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Create conda environment....
        /// </summary>
        public static string EnvironmentViewCondaLabel {
            get {
                return ResourceManager.GetString("EnvironmentViewCondaLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Create new conda environment.
        /// </summary>
        public static string EnvironmentViewCreateNewCondaEnvironmentAutomationName {
            get {
                return ResourceManager.GetString("EnvironmentViewCreateNewCondaEnvironmentAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Add new environment.
        /// </summary>
        public static string EnvironmentViewCustomAutomationName {
            get {
                return ResourceManager.GetString("EnvironmentViewCustomAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Custom....
        /// </summary>
        public static string EnvironmentViewCustomLabel {
            get {
                return ResourceManager.GetString("EnvironmentViewCustomLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open Interactive Window.
        /// </summary>
        public static string EnvironmentViewInteractiveWindowAutomationName {
            get {
                return ResourceManager.GetString("EnvironmentViewInteractiveWindowAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open Interactive Window.
        /// </summary>
        public static string EnvironmentViewInteractiveWindowTooltip {
            get {
                return ResourceManager.GetString("EnvironmentViewInteractiveWindowTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Completion DB is not up to date. Click to start refreshing.
        /// </summary>
        public static string EnvironmentViewNeedRefreshAutomationHelp {
            get {
                return ResourceManager.GetString("EnvironmentViewNeedRefreshAutomationHelp", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Refresh completion DB.
        /// </summary>
        public static string EnvironmentViewNeedRefreshAutomationName {
            get {
                return ResourceManager.GetString("EnvironmentViewNeedRefreshAutomationName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Completion DB is not up to date. Click to start refreshing..
        /// </summary>
        public static string EnvironmentViewNeedRefreshToolTip {
            get {
                return ResourceManager.GetString("EnvironmentViewNeedRefreshToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Go online and help me find other environments.
        /// </summary>
        public static string EnvironmentViewOnlineHelpLabel {
            get {
                return ResourceManager.GetString("EnvironmentViewOnlineHelpLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Refreshing completion DB.
        /// </summary>
        public static string EnvironmentViewRefreshDBProgressTooltip {
            get {
                return ResourceManager.GetString("EnvironmentViewRefreshDBProgressTooltip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Installation failed.
        /// </summary>
        public static string InstallationFailed {
            get {
                return ResourceManager.GetString("InstallationFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Failed to install &apos;{0}&apos; -----
        ///.
        /// </summary>
        public static string InstallingPackageFailed {
            get {
                return ResourceManager.GetString("InstallingPackageFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Installing &apos;{0}&apos; -----.
        /// </summary>
        public static string InstallingPackageStarted {
            get {
                return ResourceManager.GetString("InstallingPackageStarted", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Successfully installed &apos;{0}&apos; -----
        ///.
        /// </summary>
        public static string InstallingPackageSuccess {
            get {
                return ResourceManager.GetString("InstallingPackageSuccess", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Failed to install pip -----
        ///.
        /// </summary>
        public static string InstallingPipFailed {
            get {
                return ResourceManager.GetString("InstallingPipFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Installing pip -----.
        /// </summary>
        public static string InstallingPipStarted {
            get {
                return ResourceManager.GetString("InstallingPipStarted", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ----- Successfully installed pip -----
        ///.
        /// </summary>
        public static string InstallingPipSuccess {
            get {
                return ResourceManager.GetString("InstallingPipSuccess", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Enumerating packages failed.
        /// </summary>
        public static string ListFailed {
            get {
                return ResourceManager.GetString("ListFailed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to (Loading description...).
        /// </summary>
        public static string LoadingDescription {
            get {
                return ResourceManager.GetString("LoadingDescription", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Operation cannot be started because the environment is not configured..
        /// </summary>
        public static string MisconfiguredEnvironment {
            get {
                return ResourceManager.GetString("MisconfiguredEnvironment", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to IntelliSense [database disabled].
        /// </summary>
        public static string NoDBExtensionDisplayName {
            get {
                return ResourceManager.GetString("NoDBExtensionDisplayName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to IntelliSense databases will be removed in a future update and have been disabled to help with testing. See the link below to reactivate the database..
        /// </summary>
        public static string NoDBExtensionHelpContent {
            get {
                return ResourceManager.GetString("NoDBExtensionHelpContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to In a future update to Visual Studio, IntelliSense databases for Python code will be removed. We are currently testing our replacement, which does not use databases.
        ///
        ///If you are having trouble, you can click the link below and restart Visual Studio to restore the old functionality. It can be enabled again through Tools, Options, Python..
        /// </summary>
        public static string NoDBExtensionMessage {
            get {
                return ResourceManager.GetString("NoDBExtensionMessage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Reactivate IntelliSense databases in my next session.
        /// </summary>
        public static string NoDBExtensionReactivate {
            get {
                return ResourceManager.GetString("NoDBExtensionReactivate", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to (No description).
        /// </summary>
        public static string NoDescription {
            get {
                return ResourceManager.GetString("NoDescription", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Clear search filter.
        /// </summary>
        public static string PipExtensionClearSearchToolTip {
            get {
                return ResourceManager.GetString("PipExtensionClearSearchToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to These packages can be managed using your environment&apos;s package manager. Type in the search box to install new packages, or use the buttons on existing packages to update or remove them..
        /// </summary>
        public static string PipExtensionHelpContent {
            get {
                return ResourceManager.GetString("PipExtensionHelpContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Install {0}.
        /// </summary>
        public static string PipExtensionInstallLabel {
            get {
                return ResourceManager.GetString("PipExtensionInstallLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Download and install pip package manager.
        /// </summary>
        public static string PipExtensionInstallPipLabel {
            get {
                return ResourceManager.GetString("PipExtensionInstallPipLabel", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Install the setuptools and pip packages from PyPI. These packages are required to use this panel..
        /// </summary>
        public static string PipExtensionInstallPipToolTip {
            get {
                return ResourceManager.GetString("PipExtensionInstallPipToolTip", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Learn more.
        /// </summary>
        public static string PipExtensionSecurityLearnMore {
            get {
                return ResourceManager.GetString("PipExtensionSecurityLearnMore", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Due to new security restrictions, installing from the internet may not work on this version of Python..
        /// </summary>
        public static string PipExtensionSecurityWarning {
            get {
                return ResourceManager.GetString("PipExtensionSecurityWarning", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to (unknown).
        /// </summary>
        public static string PipPackageUnknownPackageSpec {
            get {
                return ResourceManager.GetString("PipPackageUnknownPackageSpec", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Visual Studio.
        /// </summary>
        public static string ProductTitle {
            get {
                return ResourceManager.GetString("ProductTitle", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to (Standard Library).
        /// </summary>
        public static string StandardLibraryModuleListItem {
            get {
                return ResourceManager.GetString("StandardLibraryModuleListItem", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Environment pages.
        /// </summary>
        public static string ToolWindow_ExtensionsName {
            get {
                return ResourceManager.GetString("ToolWindow_ExtensionsName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Environment page help.
        /// </summary>
        public static string ToolWindow_HelpContentName {
            get {
                return ResourceManager.GetString("ToolWindow_HelpContentName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Toggle page help.
        /// </summary>
        public static string ToolWindow_HelpVisibilityName {
            get {
                return ResourceManager.GetString("ToolWindow_HelpVisibilityName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Python environments.
        /// </summary>
        public static string ToolWindow_ListOfEnvironmentsName {
            get {
                return ResourceManager.GetString("ToolWindow_ListOfEnvironmentsName", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Uninstallation failed.
        /// </summary>
        public static string UninstallationFailed {
            get {
                return ResourceManager.GetString("UninstallationFailed", resourceCulture);
            }
        }
    }
}
